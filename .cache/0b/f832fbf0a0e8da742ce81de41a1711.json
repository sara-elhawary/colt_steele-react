{"id":"components/moodToggler.js","dependencies":[{"name":"/home/sarah/Files/Courses/colt_steele-react/package.json","includedInParent":true,"mtime":1608793358259},{"name":"react","loc":{"line":1,"column":32},"parent":"/home/sarah/Files/Courses/colt_steele-react/src/components/moodToggler.js","resolved":"/home/sarah/Files/Courses/colt_steele-react/node_modules/react/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = MoodToggler;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction MoodToggler() {\n  var _useState = (0, _react.useState)(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isHappy = _useState2[0],\n      setIsHappy = _useState2[1];\n\n  var toggleIsHappy = function toggleIsHappy() {\n    return setIsHappy(!isHappy);\n  };\n\n  var styles = {\n    color: isHappy ? 'green' : 'red'\n  };\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"toggler\"\n  }, /*#__PURE__*/_react.default.createElement(\"h3\", {\n    style: styles\n  }, isHappy ? ':)' : ':('), /*#__PURE__*/_react.default.createElement(\"button\", {\n    onClick: toggleIsHappy\n  }, \"Toggle\"));\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"components/moodToggler.js","original":{"line":1,"column":0}},{"generated":{"line":26,"column":0},"source":"components/moodToggler.js","original":{"line":3,"column":15}},{"name":"MoodToggler","generated":{"line":26,"column":9},"source":"components/moodToggler.js","original":{"line":3,"column":24}},{"generated":{"line":26,"column":20},"source":"components/moodToggler.js","original":{"line":3,"column":15}},{"generated":{"line":26,"column":23},"source":"components/moodToggler.js","original":{"line":3,"column":38}},{"generated":{"line":27,"column":0},"source":"components/moodToggler.js","original":{"line":3,"column":38}},{"generated":{"line":27,"column":18},"source":"components/moodToggler.js","original":{"line":4,"column":32}},{"generated":{"line":27,"column":39},"source":"components/moodToggler.js","original":{"line":4,"column":41}},{"generated":{"line":27,"column":43},"source":"components/moodToggler.js","original":{"line":4,"column":32}},{"generated":{"line":27,"column":44},"source":"components/moodToggler.js","original":{"line":3,"column":38}},{"generated":{"line":28,"column":0},"source":"components/moodToggler.js","original":{"line":3,"column":38}},{"generated":{"line":29,"column":0},"source":"components/moodToggler.js","original":{"line":3,"column":38}},{"name":"isHappy","generated":{"line":29,"column":6},"source":"components/moodToggler.js","original":{"line":4,"column":9}},{"generated":{"line":29,"column":13},"source":"components/moodToggler.js","original":{"line":3,"column":38}},{"generated":{"line":30,"column":0},"source":"components/moodToggler.js","original":{"line":3,"column":38}},{"name":"setIsHappy","generated":{"line":30,"column":6},"source":"components/moodToggler.js","original":{"line":4,"column":18}},{"generated":{"line":30,"column":16},"source":"components/moodToggler.js","original":{"line":3,"column":38}},{"generated":{"line":32,"column":0},"source":"components/moodToggler.js","original":{"line":5,"column":2}},{"name":"toggleIsHappy","generated":{"line":32,"column":6},"source":"components/moodToggler.js","original":{"line":5,"column":8}},{"generated":{"line":32,"column":19},"source":"components/moodToggler.js","original":{"line":5,"column":21}},{"generated":{"line":32,"column":22},"source":"components/moodToggler.js","original":{"line":5,"column":24}},{"name":"toggleIsHappy","generated":{"line":32,"column":31},"source":"components/moodToggler.js","original":{"line":5,"column":8}},{"generated":{"line":32,"column":44},"source":"components/moodToggler.js","original":{"line":5,"column":24}},{"generated":{"line":33,"column":0},"source":"components/moodToggler.js","original":{"line":5,"column":24}},{"name":"setIsHappy","generated":{"line":33,"column":11},"source":"components/moodToggler.js","original":{"line":5,"column":30}},{"generated":{"line":33,"column":21},"source":"components/moodToggler.js","original":{"line":5,"column":40}},{"generated":{"line":33,"column":22},"source":"components/moodToggler.js","original":{"line":5,"column":41}},{"name":"isHappy","generated":{"line":33,"column":23},"source":"components/moodToggler.js","original":{"line":5,"column":42}},{"generated":{"line":33,"column":30},"source":"components/moodToggler.js","original":{"line":5,"column":40}},{"generated":{"line":33,"column":31},"source":"components/moodToggler.js","original":{"line":5,"column":24}},{"generated":{"line":34,"column":0},"source":"components/moodToggler.js","original":{"line":5,"column":24}},{"generated":{"line":34,"column":3},"source":"components/moodToggler.js","original":{"line":5,"column":2}},{"generated":{"line":36,"column":0},"source":"components/moodToggler.js","original":{"line":6,"column":2}},{"name":"styles","generated":{"line":36,"column":6},"source":"components/moodToggler.js","original":{"line":6,"column":8}},{"generated":{"line":36,"column":12},"source":"components/moodToggler.js","original":{"line":6,"column":14}},{"generated":{"line":36,"column":15},"source":"components/moodToggler.js","original":{"line":6,"column":17}},{"name":"color","generated":{"line":37,"column":0},"source":"components/moodToggler.js","original":{"line":6,"column":19}},{"name":"color","generated":{"line":37,"column":4},"source":"components/moodToggler.js","original":{"line":6,"column":19}},{"generated":{"line":37,"column":9},"source":"components/moodToggler.js","original":{"line":6,"column":24}},{"name":"isHappy","generated":{"line":37,"column":11},"source":"components/moodToggler.js","original":{"line":6,"column":26}},{"generated":{"line":37,"column":18},"source":"components/moodToggler.js","original":{"line":6,"column":33}},{"generated":{"line":37,"column":21},"source":"components/moodToggler.js","original":{"line":6,"column":36}},{"generated":{"line":37,"column":28},"source":"components/moodToggler.js","original":{"line":6,"column":33}},{"generated":{"line":37,"column":31},"source":"components/moodToggler.js","original":{"line":6,"column":46}},{"generated":{"line":38,"column":0},"source":"components/moodToggler.js","original":{"line":6,"column":17}},{"generated":{"line":38,"column":3},"source":"components/moodToggler.js","original":{"line":6,"column":2}},{"generated":{"line":39,"column":0},"source":"components/moodToggler.js","original":{"line":7,"column":2}},{"generated":{"line":39,"column":22},"source":"components/moodToggler.js","original":{"line":8,"column":4}},{"generated":{"line":40,"column":0},"source":"components/moodToggler.js","original":{"line":8,"column":9}},{"generated":{"line":40,"column":4},"source":"components/moodToggler.js","original":{"line":8,"column":9}},{"generated":{"line":40,"column":13},"source":"components/moodToggler.js","original":{"line":8,"column":18}},{"generated":{"line":40,"column":15},"source":"components/moodToggler.js","original":{"line":8,"column":19}},{"generated":{"line":41,"column":0},"source":"components/moodToggler.js","original":{"line":8,"column":4}},{"generated":{"line":41,"column":18},"source":"components/moodToggler.js","original":{"line":9,"column":6}},{"generated":{"line":42,"column":0},"source":"components/moodToggler.js","original":{"line":9,"column":10}},{"generated":{"line":42,"column":4},"source":"components/moodToggler.js","original":{"line":9,"column":10}},{"generated":{"line":42,"column":9},"source":"components/moodToggler.js","original":{"line":9,"column":15}},{"name":"styles","generated":{"line":42,"column":11},"source":"components/moodToggler.js","original":{"line":9,"column":17}},{"generated":{"line":43,"column":0},"source":"components/moodToggler.js","original":{"line":9,"column":6}},{"name":"isHappy","generated":{"line":43,"column":5},"source":"components/moodToggler.js","original":{"line":9,"column":26}},{"generated":{"line":43,"column":12},"source":"components/moodToggler.js","original":{"line":9,"column":33}},{"generated":{"line":43,"column":15},"source":"components/moodToggler.js","original":{"line":9,"column":36}},{"generated":{"line":43,"column":19},"source":"components/moodToggler.js","original":{"line":9,"column":33}},{"generated":{"line":43,"column":22},"source":"components/moodToggler.js","original":{"line":9,"column":43}},{"generated":{"line":43,"column":26},"source":"components/moodToggler.js","original":{"line":9,"column":6}},{"generated":{"line":43,"column":27},"source":"components/moodToggler.js","original":{"line":8,"column":4}},{"generated":{"line":43,"column":42},"source":"components/moodToggler.js","original":{"line":10,"column":6}},{"generated":{"line":44,"column":0},"source":"components/moodToggler.js","original":{"line":10,"column":14}},{"generated":{"line":44,"column":4},"source":"components/moodToggler.js","original":{"line":10,"column":14}},{"generated":{"line":44,"column":11},"source":"components/moodToggler.js","original":{"line":10,"column":21}},{"name":"toggleIsHappy","generated":{"line":44,"column":13},"source":"components/moodToggler.js","original":{"line":10,"column":23}},{"generated":{"line":45,"column":0},"source":"components/moodToggler.js","original":{"line":10,"column":6}},{"generated":{"line":45,"column":14},"source":"components/moodToggler.js","original":{"line":8,"column":4}},{"generated":{"line":45,"column":15},"source":"components/moodToggler.js","original":{"line":7,"column":2}},{"generated":{"line":46,"column":0},"source":"components/moodToggler.js","original":{"line":13,"column":1}}],"sources":{"components/moodToggler.js":"import React, { useState } from 'react'\n\nexport default function MoodToggler() {\n  const [isHappy, setIsHappy] = useState(true)\n  const toggleIsHappy = () => setIsHappy(!isHappy)\n  const styles = { color: isHappy ? 'green' : 'red' }\n  return (\n    <div className=\"toggler\">\n      <h3 style={styles}>{isHappy ? ':)' : ':('}</h3>\n      <button onClick={toggleIsHappy}>Toggle</button>\n    </div>\n  )\n}\n"},"lineCount":null}},"error":null,"hash":"1b0c42253025945f4042d382f091a698","cacheData":{"env":{}}}